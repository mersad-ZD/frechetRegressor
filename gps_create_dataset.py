# -*- coding: utf-8 -*-
"""gps_create_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Yoed7zT-01r4TFpgicbP9hkWl7EgDzf
"""

!pip install similaritymeasures

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd
import time
from numpy.random import randint

from sklearn.metrics import mean_squared_error
import similaritymeasures as sm
from numpy.random import seed
import time

# seed(4)
# from tensorflow import set_random_seed
# set_random_seed(5)

tic = time.time()

vectore1 = np.zeros((128, 2), dtype=np.float32)
vectore2 = np.zeros((128, 2), dtype=np.float32)

my_data = np.zeros((100000, 513), dtype=np.float32)

for i in range(100000):
    lat1 = np.random.uniform(low=-90, high=90, size=(128,))
    long1 = np.random.uniform(low=-180, high=180, size=(128,))

    lat1 = np.round(lat1, 5)
    long1 = np.round(long1, 5)

    vectore1[:, 0] = lat1
    vectore1[:, 1] = long1
# --------------------------------------------------------
    lat2 = np.random.uniform(low=-90, high=90, size=(128,))
    long2 = np.random.uniform(low=-180, high=180, size=(128,))

    lat2 = np.round(lat2, 5)
    long2 = np.round(long2, 5)

    vectore2[:, 0] = lat2
    vectore2[:, 1] = long2

    df = sm.frechet_dist(vectore1, vectore2)

    my_data[i, :-1] = np.concatenate((lat1, long1, lat2, long2))
    my_data[i,  -1] = df

dataset = pd.DataFrame(data=my_data)


dataset.to_csv(r"/content/drive/My Drive/created dataset/testGPS_100000_128_lat_long.csv" , index=False )

print(dataset.shape)

toc = time.time()
print("time usage : ", str((toc - tic)*1000), " ms")

import numpy as np
import pandas as pd
from numpy.random import seed
import random

random.seed(1)
seed(1)

sample = np.zeros((50, 256), dtype=np.float32)
for i in range(50):
    lat = np.random.uniform(low=-90, high=90, size=(128,))
    long = np.random.uniform(low=-180, high=180, size=(128,))

    lat = np.round(lat, 5)
    long = np.round(long, 5)

    sample[i, :] = np.concatenate((lat, long))

X = pd.DataFrame(data=sample)
X.to_csv(r"/content/drive/My Drive/Created_dataset/50sample_clustering.csv" , index=False )